
// This file has been generated by the GUI designer. Do not modify.
namespace CCExtractorTester
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action FileAction;
		private global::Gtk.Action OpenTestsFileAction;
		private global::Gtk.Action saveAction;
		private global::Gtk.Action openAction;
		private global::Gtk.Action ExitAction;
		private global::Gtk.Action RunTestsAction;
		private global::Gtk.Action ConfigureApplicationAction;
		private global::Gtk.Action preferencesAction;
		private global::Gtk.Action stopAction;
		private global::Gtk.Action quitAction;
		private global::Gtk.VBox vbox2;
		private global::Gtk.MenuBar menubar1;
		private global::Gtk.ScrolledWindow scrolledwindow2;
		private global::Gtk.Statusbar statusbar1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget CCExtractorTester.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w1.Add (this.FileAction, null);
			this.OpenTestsFileAction = new global::Gtk.Action ("OpenTestsFileAction", global::Mono.Unix.Catalog.GetString ("Open tests file"), null, null);
			this.OpenTestsFileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open tests file");
			w1.Add (this.OpenTestsFileAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Save tests file"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save tests file");
			w1.Add (this.saveAction, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("Open tests file"), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open tests file");
			w1.Add (this.openAction, null);
			this.ExitAction = new global::Gtk.Action ("ExitAction", global::Mono.Unix.Catalog.GetString ("Exit"), null, null);
			this.ExitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Exit");
			w1.Add (this.ExitAction, null);
			this.RunTestsAction = new global::Gtk.Action ("RunTestsAction", global::Mono.Unix.Catalog.GetString ("Run tests"), null, null);
			this.RunTestsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Run tests");
			w1.Add (this.RunTestsAction, null);
			this.ConfigureApplicationAction = new global::Gtk.Action ("ConfigureApplicationAction", global::Mono.Unix.Catalog.GetString ("Configure application"), null, null);
			this.ConfigureApplicationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Configure application");
			w1.Add (this.ConfigureApplicationAction, null);
			this.preferencesAction = new global::Gtk.Action ("preferencesAction", null, null, "gtk-preferences");
			w1.Add (this.preferencesAction, null);
			this.stopAction = new global::Gtk.Action ("stopAction", global::Mono.Unix.Catalog.GetString ("Exit"), null, "gtk-stop");
			this.stopAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Exit");
			w1.Add (this.stopAction, "<Primary>x");
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Exit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Exit");
			w1.Add (this.quitAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "CCExtractorTester.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("CCExtractor Tester");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child CCExtractorTester.MainWindow.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString (@"<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><menuitem name='quitAction' action='quitAction'/></menu><menuitem name='RunTestsAction' action='RunTestsAction'/><menuitem name='ConfigureApplicationAction' action='ConfigureApplicationAction'/></menubar></ui>");
			this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
			this.menubar1.Name = "menubar1";
			this.vbox2.Add (this.menubar1);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.menubar1]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.scrolledwindow2 = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow2.CanFocus = true;
			this.scrolledwindow2.Name = "scrolledwindow2";
			this.scrolledwindow2.ShadowType = ((global::Gtk.ShadowType)(1));
			this.vbox2.Add (this.scrolledwindow2);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.scrolledwindow2]));
			w3.Position = 1;
			// Container child vbox2.Gtk.Box+BoxChild
			this.statusbar1 = new global::Gtk.Statusbar ();
			this.statusbar1.Name = "statusbar1";
			this.statusbar1.Spacing = 6;
			this.vbox2.Add (this.statusbar1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.statusbar1]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 610;
			this.DefaultHeight = 300;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
			this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
			this.RunTestsAction.Activated += new global::System.EventHandler (this.OnRunTestsActionActivated);
			this.ConfigureApplicationAction.Activated += new global::System.EventHandler (this.OnConfigureApplicationActionActivated);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		}
	}
}
